---
format: 
  pdf:
    mainfont: {mainfont}
    sansfont: {sansfont}
    fontsize: {fontsize}
    fig-pos: 'H'
    fig-align: left
    toc: false
    number-sections: true
    include-in-header:
      - {background_images}
  docx:
      reference-doc: {word_template}
      toc: true
      number-sections: true
      fig-align: left
editor: source

bibliography: {references}
csl: {citation_style}

execute:
  echo: false
  
params: 
  definitions_data_path: null
  abbreviations_data_path: null
  listed_elements_generator_function_path: null
  linkage_rate_table_path: null
  linkage_rates_plot_path: null
  algorithm_summary_table_path: null
  performance_measures_table_path: null
  performance_measures_plot_path: null
  missingness_table_path: null
  report_title: null
  left_dataset_name: null
  right_dataset_name: null
  data_linker: null
  output_format: null
  project_id: nul
  num_records_left_dataset: null
  num_records_right_dataset: null
  ground_truth: null
  data_time_period: null
  num_records_linked: null
  overall_linkage_rate: null
  num_non_missing_ground_truth: null
  percent_non_missing_ground_truth: null
  report_generation_date: null
  display_back_cover_page: true
  comprehensive_report: true

header-includes:
- \renewcommand{\thesection}{\arabic{section}.}
- \renewcommand{\thesubsection}{\arabic{section}.\arabic{subsection}}
- \usepackage{geometry}
- \geometry{paperheight=11in, paperwidth=8.5in, top = 1in, bottom = 1.5in, left = 1in, right = 1in}
- \usepackage{caption}
- \raggedright
- \captionsetup[figure]{justification=raggedright,singlelinecheck=false}
- \captionsetup[table]{justification=raggedright,singlelinecheck=false}
---

```{r load packages, include=FALSE, message=FALSE}
library(flextable)
library(xfun)
```

```{r read_data function}
#----
# read_data
#
# Performs error checking on the file path and reads in the data.
#
# @param data_path A file path to the data.
# @param parameter The name of the parameter whose path we're checking.
#
# @return The read in data.
#----
read_data <- function(data_path, parameter){
  if (!is.null(data_path)){
    if (!file.exists(data_path)){
      stop(sprintf("Invalid argument: %s. Could not find file", parameter))
    }
    if (file_ext(data_path) != "rds"){
      stop(sprintf("Invalid argument: %s. File must be an rds file", parameter))
    }
    data <- readRDS(data_path)
  } else {
    data <- NULL
  }
  return(data)
}
```

```{r read in report elements}
# if one of these is NULL it means it wasn't supplied to the function so don't output it

listed_output_function <- read_data(params$listed_elements_generator_function_path, "listed_elements_generator_function_path")

definitions_data <- read_data(params$definitions_data_path, "definitions_data_path")

abbreviations_data <- read_data(params$abbreviations_data_path, "abbreviations_data_path")

linkage_rate_table <- read_data(params$linkage_rate_table_path, "linkage_rate_table_path")

linkage_rates_over_time_plot <- read_data(params$linkage_rates_plot_path, "linkage_rates_plot_path")

algorithm_summary_table <- read_data(params$algorithm_summary_table_path, "algorithm_summary_tabl_path")

performance_measures_table <- read_data(params$performance_measures_table_path, "performance_measures_table_path")

missingness_table <- read_data(params$missingness_table_path, "missingness_table_path")

if (!is.null(params$performance_measures_plot_path)){
  if (!file.exists(params$performance_measures_plot_path)){
    stop("Invalid argument: performance_measures_plot-path. Could not find file")
  }
  if (params$output_format == "pdf"){
    if (file_ext(params$performance_measures_plot_path) != "pdf"){
      stop("Invalid argument: performance_measures_plot-path. Must be a path to a PDF file")
    }
  } else {
    if (file_ext(params$performance_measures_plot_path) != "png"){
      stop("Invalid argument: performance_measures_plot-path. Must be a path to a png file")
    }
  }
}
```

```{r set_page_width function}
#----
# set_page_width
#
# Must be called in an R chunk that has results='asis' set in the header in order to work.
#
# @param orientation String indicating the desired page orientation. Allowed values are 'portrait' and 'landscape'.
# @return A prints a list of LaTeX comands.
#----
set_page_width <- function(orientation){
  if (orientation != "portrait" & orientation != "landscape"){
    stop("Invalid argument: orientation. orientation must be either 'portrait' or 'landscape'")
  }
  if (orientation == "portrait"){
    cat("\\newpage")
    cat("\\pdfpagewidth = 8.5in")
    cat("\\pdfpageheight = 11in")
    cat("\\newgeometry{top = 1in, bottom = 1.5in, left = 1in, right = 1in}")
  } else {
    cat("\\newpage")
    cat("\\pdfpagewidth = 11in")
    cat("\\pdfpageheight = 8.5in")
    cat("\\newgeometry{top = 1in, bottom = 4in, left = 1in, right = 1in}")
  }
}
```

```{r requires_landscape_page function}
#----
# requires_landscape_page
#
# Determines if the table width is too big for a portrait page
#
# @param table A flextable object
# @return A logical indicating whether the page needs to be in landscape orientation
#----
requires_landscape_page <- function(table){
  MAX_PORTRAIT_TABLE_WIDTH <- 6.5
  return (params$output_format == "pdf" & flextable_dim(table)$widths >= MAX_PORTRAIT_TABLE_WIDTH)
}
```

::: {.content-visible when-format="pdf"}
```{=tex}
\begin{titlepage}
    \begin{flushright}
    \thispagestyle{nopagenumbers}
        \vspace*{5cm}

        \Huge
        \textbf{`r params$report_title`}\\
        \LARGE
        \textbf{`r ifelse(is.null(params$data_time_period), "", params$data_time_period)`}

        \LARGE
        Record Linkage Quality Report

        \vfill
        \large
        \textbf{`r ifelse(is.null(params$project_id), "", sprintf("PHRPC \\#: %s", as.character(params$project_id)))`}\\
        Report Generation Date: `r params$report_generation_date`

    \end{flushright}
\end{titlepage}
```
```{=tex}
\hypersetup{linkcolor=black}
\thispagestyle{nopagenumbers}
```
:::

::: {.content-visible when-format="pdf"}
```{=tex}
\section*{Acknowledgements}
```
:::

::: {.content-visible when-format="docx"}
{{< pagebreak >}}

# Acknowledgements {.unnumbered}
:::

This report was generated using software developed by Elizabeth Stoughton at the George & Fay Yee Centre for Healthcare Innovation (CHI), in partnership with the Manitoba Centre for Health Policy (MCHP), and the Provincial Information Management and Analytics (PIMA) department at Manitoba Health (MH). Graphics were designed by Karan Singh and Patrick Faucher of CHI Knowledge Translation. Barret Monchka conceptualized and led the design and development of the report-generating software.

The linkrep R package (<https://github.com/CHIMB/linkrep>), which produced this report, is available for use under an MIT license, provided this acknowledgement remains intact.

Â© 2024 George & Fay Yee Centre for Healthcare Innovation

::: {.content-visible when-format="pdf"}
```{=tex}
\section*{Contact Information}
```
:::

::: {.content-visible when-format="docx"}
# Contact Information {.unnumbered}
:::

If you would like to discuss the results of this report and the potential impact of linkage error on your research study, or require guidance on adjusting for linkage error in your data analysis, please request a consultation with CHI by visiting <https://umanitoba.ca/centre-for-healthcare-innovation/> and selecting "Request a free consultation."

For additional questions regarding this linkage, please e-mail [data.linkage\@umanitoba.ca](data.linkage@umanitoba.ca).

::: {.content-visible when-format="pdf"}
{{< pagebreak >}}

```{=tex}
\renewcommand{\contentsname}{Table of Contents}
\tableofcontents
```
:::

`r if(!is.null(definitions_data) & !is.null(listed_output_function)) "::: {.content-visible}" else "::: {.content-hidden}"`

{{< pagebreak >}}

::: {.content-visible when-format="pdf"}
```{=tex}
\section*{Definition of Terms}
\addcontentsline{toc}{section}{List of Definition of Terms}
```

```{r definitions pdf output, results='asis'}
if (!is.null(definitions_data) & !is.null(listed_output_function) & params$output_format == "pdf"){
  listed_output_function(
    data = definitions_data, 
    output_format = params$output_format)
}
```
:::

::: {.content-visible when-format="docx"}
# Definition of Terms {.unnumbered}

\addcontentsline{toc}{section}{Definition of Terms}

```{r definitions word output, ft.align="left"}
if (!is.null(definitions_data) & !is.null(listed_output_function) & params$output_format == "docx"){
  listed_output_function(
    data = definitions_data, 
    output_format = params$output_format)
}
```
:::

:::


`r if(!is.null(abbreviations_data) & !is.null(listed_output_function)) "::: {.content-visible}" else "::: {.content-hidden}"`

{{< pagebreak >}}

::: {.content-visible when-format="pdf"}
```{=tex}
\section*{List of Abbreviations}
\addcontentsline{toc}{section}{List of Abbreviations}
```

```{r abbreviations pdf output, results='asis'}
if (!is.null(abbreviations_data) & !is.null(listed_output_function) & params$output_format == "pdf"){
  listed_output_function(
    data = abbreviations_data, 
    output_format = params$output_format)
}
```
:::

::: {.content-visible when-format="docx"}
# List of Abbreviations {.unnumbered}

\addcontentsline{toc}{section}{List of Abbreviations}

```{r abbreviations word output, ft.align="left"}
if (!is.null(abbreviations_data) & !is.null(listed_output_function) & params$output_format == "docx"){
  listed_output_function(
    data = abbreviations_data, 
    output_format = params$output_format)
}
```
:::

:::

{{< pagebreak >}}

::: {.content-visible when-format="pdf"}
```{=tex}
\section*{Summary}
\addcontentsline{toc}{section}{Summary}
```
:::

::: {.content-visible when-format="docx"}
# Summary {.unnumbered}

\addcontentsline{toc}{section}{Summary}
:::

The purpose of this report is to detail the methods used to link the records in `r params$left_dataset_name` (N = `r params$num_records_left_dataset`) to those in `r params$right_dataset_name` `r ifelse(is.null(params$num_records_right_dataset), "", sprintf("(N = %s)", params$num_records_right_dataset))` and to provide guidance on how to evaluate the quality of the linkage process.

Records were linked using an iterative, multistage process that uses a combination of deterministic and probabilistic approaches to link the records. We linked `r params$num_records_linked` records, achieving an overall linkage rate of `r params$overall_linkage_rate`% (@tbl-linkage_rates).

{{< pagebreak >}}

::: {.content-visible when-format="pdf"}
```{=tex}
\section*{How to Read This Report}
\addcontentsline{toc}{section}{How to Read This Report}
```
:::

::: {.content-visible when-format="docx"}
# How to Read This Report {.unnumbered}

\addcontentsline{toc}{section}{How to Read This Report}
:::

Record linkage is an efficient way of generating comprehensive datasets for researchers. Details on the linkage process and its quality are rarely reported in studies using linked data\^(reference multimorbidity study). The lack of reporting is primarily due to researchersâ limited knowledge of record linkage and the potential errors that can lead to biases. To mitigate misleading conclusions in studies using linked data, we have created a report using recommended guidelines on reporting linked data\^(reference papers). A few important guidelines we have included are:

-   Providing the overall linkage rate
-   A methods section, detailing the steps taken to perform the linkage
-   Information on how to assess the quality of the linkage

The following section (Results) includes tables and plots that summarize the linkage process and its performance. To assess the quality of the linkage, we recommend you do the following:

-   Examine the number of unlinked records, stratified by sociodemographic characteristics (Table). If you are using this data for research, this could reveal potential biases in your study data. For example, a significantly lower linkage rate among females compared to males could introduce selection bias in your research study. If you are using this to evaluate the linkage algorithm, variations in linkage rates may highlight limitations in the algorithmâs effectiveness across diverse population groups.
-   Examine the linkage rates over acquisition dates (Figure ). Changes in linkage rates over time may indicate shifts in data quality, variations in data recording practices, or improvements/changes made to the algorithm.
-   Examine the performance measures for the linkage algorithm (Table , Figure). The linkage algorithm involves a trade off between match certainty and match sensitivity. Match certainty refers to the proportion of identified matched pairs that are true matches, indicating the accuracy of the matched pairs. Match sensitivity refers to the proportion of true matches correctly identified by the algorithm out of all true matches, indicating the algorithm's ability to detect actual matches. An example of a match certainty metric is positive predictive value (precision), and an example of a match sensitivity metric is sensitivity (recall). Examining the table will inform you of the certainty and sensitivity of the record linkage performed.
-   Examine previous linkages of the data. If you are evaluating the linkage algorithm and have access to previous linkages, compare linkage rates (Table) and the matching and blocking variables (Table) to assess consistency and any potential improvements.

Detailed information on record linkage and the methods used can be found in the Background and Methods section following the Results section.

If you are going to be publishing a research study with this data, please consider referring to reporting guidelines for studies involving linked data\^(reference papers) to ensure transparency and aid readers in interpreting your results.

{{< pagebreak >}}

```{r linkage rate table page orientation before, results='asis'}
if (requires_landscape_page(linkage_rate_table)){
  set_page_width("landscape")
}
```

# Results

## Linkage Rate Summary

```{r linkage rate table, ft.align="left"}
#| label: tbl-linkage_rates
#| tbl-cap: !expr paste0("Stratified linkage rates for records in ", params$left_dataset_name, " that linked to the records in ",  params$right_dataset_name, " (N = ", params$num_records_left_dataset, ifelse(params$data_time_period == "", "", ", "), params$data_time_period, ").") 

linkage_rate_table
```

```{r linkage rate table page orientation after, results='asis'}
if (requires_landscape_page(linkage_rate_table)){
  set_page_width("portrait")
}
```

`r if(!is.null(linkage_rates_over_time_plot)) "::: {.content-visible}" else "::: {.content-hidden}"`

```{r linkage rates over time plot}
#| label: fig-linkage_rate_dist
#| fig-cap: !expr paste0("Distribution of linkage rates over acquisition dates for records in ", params$left_dataset_name,".")
if (!is.null(linkage_rates_over_time_plot)){
  linkage_rates_over_time_plot
}
```

:::

{{< pagebreak >}}

`r if(!is.null(algorithm_summary_table)) "::: {.content-visible}" else "::: {.content-hidden}"`

```{r algorithm summary table page orientation before, results='asis'}
if (!is.null(algorithm_summary_table)){
  if (requires_landscape_page(algorithm_summary_table)){
    set_page_width("landscape")
  }
}
```

## Linkage Algorithm Summary

```{r algorithm summary table, ft.align="left"}
#| label: tbl-algorithm_summary
#| tbl-cap: !expr paste0("Linkage algorithm summary for the linkage of records in ", params$left_dataset_name, " to those in ", params$right_dataset_name, ". This table provides a detailed overview of each pass in the linkage process.")

if (!is.null(algorithm_summary_table)){
  algorithm_summary_table
}
```

```{r algorithm summary table page orientation after, results='asis'}
if (!is.null(algorithm_summary_table)){
  if (requires_landscape_page(algorithm_summary_table)){
    set_page_width("portrait")
  }
}
```

:::

```{r performance measures page orientation before, results='asis'}
if (!is.null(performance_measures_table)){
  if (requires_landscape_page(performance_measures_table)){
    set_page_width("landscape")
  }
}
```

`r if(is.null(algorithm_summary_table) & !is.null(performance_measures_table)) "::: {.content-visible}" else "::: {.content-hidden}"`

## Linkage Algorithm Summary

:::

`r if(!is.null(performance_measures_table)) "::: {.content-visible}" else "::: {.content-hidden}"`

```{r performance measures table, ft.align="left"}
#| label: tbl-performance_measures_tbl
#| tbl-cap: !expr paste0("Performance measures for estimating the performance of the probabilistic portion of the linkage algorithm for records in ", params$left_dataset_name, " linked to those in ", params$right_dataset_name, ". These were estimated for the subset of records that had non-missing values for ", params$ground_truth, " (N = ", params$num_non_missing_ground_truth, ", ", params$percent_non_missing_ground_truth, "%).")

if (!is.null(performance_measures_table)){
  performance_measures_table
}
```

`r if (!is.null(params$performance_measures_plot_path)) "::: {.content-visible}" else "::: {.content-hidden}"`

![Visualization of the performance metrics provided in @tbl-performance_measures_tbl.](`r params$performance_measures_plot_path`){#fig-performance_measures_chart}

:::

```{r performance measures page orientation after, results='asis'}
if (!is.null(performance_measures_table)){
  if (requires_landscape_page(performance_measures_table)){
    set_page_width("portrait")
  }
}
```

:::

`r if (is.null(algorithm_summary_table) & is.null(performance_measures_table) &!is.null(missingness_table)) "::: {.content-visible}" else "::: {.content-hidden}"` 

{{< pagebreak >}} 

:::

`r if (!is.null(missingness_table)) "::: {.content-visible}" else "::: {.content-hidden}"`

```{r missingness table page orientation before, results='asis'}
if (!is.null(missingness_table)){
  if (requires_landscape_page(missingness_table)){
    set_page_width("landscape")
  }
}
```

## Data Quality Assessment

```{r missingness table, ft.align="left"}
#| label: tbl-missing_counts
#| tbl-cap: !expr paste0("Missing value counts for records in ", params$left_dataset_name, ".")

if(!is.null(missingness_table)){
  missingness_table
}
```

```{r missingness table page orientation after, results='asis'}
if (!is.null(missingness_table)){
  if (requires_landscape_page(missingness_table)){
    set_page_width("portrait")
  }
}
```

:::

`r if(params$comprehensive_report) "::: {.content-visible}" else "::: {.content-hidden}"`

{{< include {extra_textual_content} >}}

:::

{{< pagebreak >}}

# References

::: {#refs}
:::

`r if(params$display_back_cover_page) "::: {.content-visible}" else "::: {.content-hidden}"`

::: {.content-visible when-format="pdf"}
{{< pagebreak >}}

```{=tex}
\begin{titlepage}
    \begin{center}
    \thispagestyle{nopagenumbers}
        \vspace*{5cm}
        

    \end{center}
\end{titlepage}
```
:::

:::
